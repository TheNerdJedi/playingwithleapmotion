 // Get gestures
        GestureList gestures = frame.Gestures ();
        for (int i = 0; i < gestures.Count; i++) {
            Gesture gesture = gestures [i];

            switch (gesture.Type) {
            case Gesture.GestureType.TYPE_CIRCLE:
                CircleGesture circle = new CircleGesture (gesture);

                // Calculate clock direction using the angle between circle normal and pointable
                String clockwiseness;
                if (circle.Pointable.Direction.AngleTo (circle.Normal) <= Math.PI / 2) {
                    //Clockwise if angle is less than 90 degrees
                    clockwiseness = "clockwise";
                } else {
                    clockwiseness = "counterclockwise";
                }

                float sweptAngle = 0;

                // Calculate angle swept since last frame
                if (circle.State != Gesture.GestureState.STATE_START) {
                    CircleGesture previousUpdate = new CircleGesture (controller.Frame (1).Gesture (circle.Id));
                    sweptAngle = (circle.Progress - previousUpdate.Progress) * 360;
                }

                SafeWriteLine ("  Circle id: " + circle.Id
                               + ", " + circle.State
                               + ", progress: " + circle.Progress
                               + ", radius: " + circle.Radius
                               + ", angle: " + sweptAngle
                               + ", " + clockwiseness);
                break;
            default:
                SafeWriteLine ("  Unknown gesture type.");
                break;
            }
        }
            case Gesture.GestureType.TYPE_SWIPE:
                SwipeGesture swipe = new SwipeGesture (gesture);
                SafeWriteLine ("  Swipe id: " + swipe.Id
                               + ", " + swipe.State
                               + ", position: " + swipe.Position
                               + ", direction: " + swipe.Direction
                               + ", speed: " + swipe.Speed);
                break;
            case Gesture.GestureType.TYPE_KEY_TAP:
                KeyTapGesture keytap = new KeyTapGesture (gesture);
                SafeWriteLine ("  Tap id: " + keytap.Id
                               + ", " + keytap.State
                               + ", position: " + keytap.Position
                               + ", direction: " + keytap.Direction);
                break;
            case Gesture.GestureType.TYPE_SCREEN_TAP:
                ScreenTapGesture screentap = new ScreenTapGesture (gesture);
                SafeWriteLine ("  Tap id: " + screentap.Id
                               + ", " + screentap.State
                               + ", position: " + screentap.Position
                               + ", direction: " + screentap.Direction);
                break;
        if (!frame.Hands.IsEmpty || !frame.Gestures ().IsEmpty) {
            SafeWriteLine ("");
        }
    }
}
